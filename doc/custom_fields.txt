CUSTOM FIELDS PROPOSAL
----------------------

********* STILL IN PROGRESS - PLEASE DO NOT REVIEW YET **************

There have been multiple requests to add certain fields to Mantis bugs.  These
requests were not realised because of the concern that they might over
complicate the usage of Mantis while not add value for most users.

Hence, the idea of adding custom fields enabling each project manager to define
extra fields for his/her project was introduced.

DEMAND
------
#0000064: user defined fields / projects
#0001179: Would like 'fix in release' field in bug table
#0001240: Consider a bug source field
#0001640: add fix by date
#0001988: additional field: expected behavior
#0002243: Additional Field for Root Cause

REQUIREMENTS
------------
- Custom fields should be defined per project.
- Custom fields should be defined by users with access level MANAGER or above
(by default, this can be configurable).
- The number of custom fields should not be restricted.
- Definition of custom fields should include the following (logically, this does
not reflect the db tables):
  - Field Id
  - Caption variable name (eg: $s_color - should be define in
  custom_strings_inc.php or fetch from db if language files are moved to db)
  - Project Id
  - Regular Expression (to be used for validation)
  - Type (0-string, 1-numeric, 2-float, 3-enum, 4-email?) (eg: 3)
  - Value (possible values (if type = 3) / default (otherwise) (eg: RED|YELLOW|BLUE)
- All custom fields of type VARCHAR(255).
- If the value of a custom field for a certain defect is empty, then it
shouldn't be stored in the db.
- If the value of a custom field for a certain defect is not found, then it
should be assumed to be empty ('').
- If the value of a custom field is equal to the default, then it should still
be saved (unless the default is an empty string).
- Custom fields should be searchable.
- The field definition should include the minimum access level required to view
the value of the field.
- The field definition should include the minimum access level required to edit
the value of the field.

DATABASE CHANGES
----------------
... this section still needs to be detailed ... will go in 0.18.0 ...

MANTIS_PROJECT_CUSTOM_FIELDS
- id: int: counter
- project_id:
- variable_name: $s_xxxxxx
- type: smallint: (0-string, 1-numeric, 2-float, 3-enum)
- value: varchar: 255
- regexp: varchar: 255
- read_access: 
- write_access:

The combination of project_id/variable name is unique.

MANTIS_BUG_CUSTOM_FIELDS(_STRINGS)
- id: int: counter
- bug_id: : foreign key to MANTIS_BUG_TABLE
- field_id: int: foreign key to MANTIS_PROJECT_CUSTOM_FIELDS.id
- value: varchar 255

core_custom_fields_API.php
--------------------------

- function custom_field_val_get( $p_bug_id, $p_field_id )
    returns false - bug doesn't exist, field doesn't exist, ...etc
    return  value - otherwise

- function custom_field_val_set( $p_bug_id, $p_field_id, $p_value )
    returns false - bug doesn't exist, field doesn't exist, invalid value,
    ...etc
    return  true - otherwise

- function custom_field_def_add ( $p_project_id, $p_variable_name, $p_type,
$p_value, $p_regexp, $p_read_access, $p_write_access )

- function custom_field_def_update ( $p_project_id, $p_old_variable_name,
  $p_new_variable_name, $p_type, $p_value, $p_regexp, $p_read_access,
  $p_write_access ) 

- function custom_field_def_delete ( $p_project_id, $p_variable_name )
    deletes the field definition and all values for it (for all bugs).

- function custom_field_val_delete_all ( $p_bug_id )
    deletes all custom values associated with the specified bug.  To be called
    from bug_delete().

- function custom_field_def_delete_all ( $p_project_id )
    deletes all custom fields defined for the specified project.  To be called
    from within project_delete().

- function custom_field_def_get_ids ( $p_project_id )

.... to be continued ...

USER INTERFACE
--------------
... to be continued ... will go in 0.18.1 ...

- View Bug
  - Only make non-empty fields visible.
- Edit Bug (submit, update)
  - All fields that belong to the project should be visible/editable.

LIMITATIONS
-----------
- Multi-line custom fields are not supported.  In the future we can add support
by defining type: N-Long String or N-MultiLine. [ what about size? ]
(we can possible have a table for each custom fields type, integer, memo,
varchar, ...etc)

POSSIBLE ADDITIONS & FUTURES
----------------------------
- Exporting custom fields (CSV, Word, Excel).
- Consider populating values by SELECT queries: (consider security issues)
  =SELECT version FROM versions_table WHERE released = 0
  we can even support a predefined set of variables:
  $sql_project_id, $sql_user_id, $sql_xxxxx.
  All have to have a certain prefix to disallow using any variable.

*** END OF DOCUMENT ***
