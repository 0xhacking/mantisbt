-- Just Ideas (feel free to modify) --
-- david ulevitch <davidu@everydns.net> --
-- $Id: FUTURE,v 1.4 2002-08-21 06:34:06 vboctor Exp $ --

Mantis rewrite.

Goals:
-o 	No loss of current functionality
-o 	No loss of current ease of use
-o 	No loss of current ease of setup
-o	Make source files clean, consistent, easy to read,
	and not unnecessarily long

Primary:
-o 	Database abstraction via ADODB (http://php.weblogs.com/ADODB)
-o 	Designed with security in mind
-o	Every "user operation" API function checks permissions before
	performing it's operation.  It would be nice if this was done
	by calling one function that could obtain all the state information
	(current user, current project, current bug, whatever...) so that
	more complex and customized rules could be developed later.  The
	basic idea is let something else decide whether the operation is
	allowed, not the API function itself.
-o	Common functions to deal with INPUT, OUTPUT, STORAGE, etc.
-o	Use $_GET/$_POST/$_REQUEST/$_COOKIE
-o	Consider moving configs to db.

Secondary:
-o	Source documentation via phpdoc (or similar)
-o	Are there any DB schema cleanups that could be done while we're
	making major changes anyway?  Might be a good time to justify
	one big change if necessary (not sure if there is, just throwing
	it out there to think about)

What else?
