-------------------------------------------------------------------------------
### Installation steps ###
-------------------------------------------------------------------------------
*** REQUIREMENTS: mysql database, php 3.0.7+, a webserver (tested on Apache,
should work with IIS or anything else php will run with).

1. First, transfer the file to your webserver.  You will need to telnet/ssh
into the server for the next stpes.

2. Next, untar/gzip it to the directory that you want.

3. After that you will need to cd into the directory and locate the
db_generate.sql file.  Run the following command:

mysql -u<username> -p<password> <databasename> < db_generate.sql

You could also cut and paste the sql statements from db_generate.sql into
a package like phpMyAdmin.  You will need to have created the database
ahead of time.

* WARNING: A DEFAULT ADMINISTRATOR level account is created.  The account name
and password are administrator / root.  Use this when you first login to
Mantis.  Immediately go to Manage and create at least one administrator level
account.  Immediately after that DELETE the administrator account.  You can
recreate it but you should delete the account to prevent the cookie_string
from being used to trick the package.  It would be even better to rename the
account or delete it.  REMEMBER: REMOVE the default administrator account.

4. Now edit config_inc.php and set the appropriate variables.  In particular
you will want to set the database variables.  hostname, username, password, and
database name must be set to match the configuration of your webserver and
mysql database.

5. If you require .php extensions (instead of .php3) run the convertToPHP4
script.  You may need to first run "chmod +x convertToPHP4" to make the script
executable.

The script will rename all the .php3 files to .php.  You also need to edit the
config_inc.php file and change $g_php = ".php3" to be ".php"

NOTE: If your server sends .php files in plain text you're going to need to do
some heavy editing.  Basically you'll need to rename all the .php files to
.php3 and then do a search and replace in every single file to rename
core_API.php to core_API.php3, and rename config_inc.php to config_inc.php3 in
the core_API file... and the same for all the other affected files.  If
you don't do this then anyone can access your database information (and delete
it).

That should be it.  You're off and running.  For some help on custom editting
of the site (including renaming the database tables) please read the
CONFIGURATION file.  You'll probably want to add more bug catgories which
is covered in CONFIGURATION.

-------------------------------------------------------------------------------
### Upgrading ###
-------------------------------------------------------------------------------
=================
0.9.x to 0.10.x
=================

You will need to add a 'protected' field in the mantis_user_table.
This command will do the trick:

ALTER TABLE mantis_user_table ADD protected VARCHAR (3) not null

=================
0.10.2 to 0.10.3+
=================

I've added a profile table and inserted feedback into the main bug table
Run these queries:

ALTER TABLE mantis_bug_table CHANGE status status ENUM ('new','fdeedback',
	'acknowledged','confirmed','assigned','resolved') DEFAULT 'new' not null;

CREATE TABLE mantis_user_profile_table (
   id int(10) unsigned zerofill DEFAULT '0000000000' NOT NULL auto_increment,
   user_id int(10) unsigned zerofill DEFAULT '0000000000' NOT NULL,
   platform varchar(32) NOT NULL,
   os varchar(32) NOT NULL,
   os_build varchar(16) NOT NULL,
   description text NOT NULL,
   default_profile char(3) NOT NULL,
   PRIMARY KEY (id)
);

-------------------------------------------------------------------------------
### Useful links ###
-------------------------------------------------------------------------------

http://www.mysql.com/      -  good documentation.
http://www.php.net/        -  excellent documentation.
http://www.apache.org/     -  you should be able to find what you need, I hope.
http://www.phpwizard.net/  -  phpMyAdmin: a web based front end to mysql.