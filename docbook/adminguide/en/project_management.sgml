<chapter>
    <title>Project Management</title>

    <para>This section covers the project management features of MantisBT.  This includes features like change log, roadmap, time tracking, reporting and others.</para>

    <section>
        <title>Change Log</title>

        <para>MantisBT doesn't just track the status of issues, it also relates issues to versions.  Each project can have several versions, which can be released or not yet released (in short, not released).  Users typically report issues against released issues and developers typically fix issues in not released versions.  With every new release comes question like: what's new?  what has been fixed?  Customers wonder if the new release is of interest to them and whether they should take an upgrade.  Well, the change log is specifically tailored to answer these kind of questions.</para>

        <para>In order for an issue to show up in the change log, it has to satisfy certain criteria.  The criteria is that the issue has to be resolved with a 'fixed' resolution and has to have the 'fixed_in_version' field set.  Users sometime wonder why resolved or closed issues don't show up in the change log, and the answer is that the 'fixed_in_version' field is not set.  Without the 'fixed_in_version', it is not possible for MantisBT to include the issues in the appropriate section of the changelog.</para>
        
        <para>MantisBT also provides the ability to customize the criteria used for an issue to be included in the change log.  For example, for installations that use a custom set of resolutions, it is possible to select multiple resolutions as valid candidates for the change log.  This can be done using custom functions (see custom functions documentation for more details).  The custom function below overrides the MantisBT default behavior to include issues with both FIXED and IMPLEMENTED (a custom resolution) resolutions in the change log.

<programlisting>
# --------------------
# Checks the provided bug and determines whether it should be included in the changelog
# or not.
# returns true: to include, false: to exclude.
function custom_function_override_changelog_include_issue( $p_issue_id ) {
    $t_issue = bug_get( $p_issue_id );

    return ( ( $t_issue->duplicate_id == 0 ) && ( $t_issue->resolution == FIXED || $t_issue->resolution == IMPLEMENTED ) &&
        ( $t_issue->status >= config_get( 'bug_resolved_status_threshold' ) ) );
}
</programlisting>
        </para>

        <para>MantisBT also provides the ability to customize the details to include from the issue and in what format.  This can be done using the following custom function.
            
<programlisting>
# --------------------
# Prints one entry in the changelog.
function custom_function_override_changelog_print_issue( $p_issue_id, $p_issue_level = 0 ) {
    $t_bug = bug_get( $p_issue_id );

    if ( $t_bug->category_id ) {
        $t_category_name = category_get_name( $t_bug->category_id );
    } else {
        $t_category_name = '';
    }

    $t_category = is_blank( $t_category_name ) ? '' : '&lt;b&gt;[' . $t_category_name . ']&lt;/b&gt; ';
    echo str_pad( '', $p_issue_level * 6, '&nbsp;' ), '- ', string_get_bug_view_link( $p_issue_id ), ': ', $t_category, string_display_line_links( $t_bug->summary );

    if ( $t_bug->handler_id != 0 ) {
        echo ' (', prepare_user_name( $t_bug->handler_id ), ')';
    }

    echo ' - ', get_enum_element( 'status', $t_bug->status ), '.&lt;br /&gt;';
}
</programlisting>
        </para>

        <para>By combining both customization features, it is also possible to do more advanced customization scenarios.  For example, users can add a 'ChangelogSummary' custom field and include all issues that have such field in the change log.  Through customizing what information being included for a qualifying issue, users can also include the 'ChangelogSummary' text rather than the native summary field.</para>

        <para>In some cases, users know that they fixed an issue and that the fix will be included in the next release, however, they don't know yet the name of the release.  In such case, the recommended approach is to always have a version defined that corresponds to the next release, which is typicalled called 'Next Release'.  Once the release is cut and has a concrete name, then 'Next Release' can be renamed to the appropriate name and a new 'Next Release' can then be created.  For teams that manage releases from multiple branches for the same project, then more than one next release can be possible.  For example, 'Next Dev Release' and 'Next Stable Release'.</para>

        <para>Another common requirement is to be able to link to the changelog of a specific project from the project's main website.  This can be done by a link that looks as the one below.  The project id can be figured out by going to the management page for the project and getting the value of project_id field form the URL.
<programlisting>
    http://YourMantisInstallation/changelog_page.php?project_id=1
</programlisting>
        </para>
        
        <para>Another approach is to go to the project page and from there users can get to multiple other locations relating to the project include the changelog.  This can be done by a URL like the following:
<programlisting>
    http://YourMantisInstallation/project_page.php?project_id=1
</programlisting>
        </para>

        <para>It is possible to customize the access level required for viewing the change log page.  This can be done using the $g_view_changelog_threshold configuration option.</para>
    </section>

    <section>
        <title>Roadmap</title>

        <para>
            TODO: intro
        </para>

        <para>
            TODO: not released / target version criteria
        </para>

        <para>
            TODO: customizing issues to be included and in what format.
        </para>

        <para>
            TODO: configuration options
        </para>

        <para>
            TODO: Handling issues to be fixed in multiple branches (mentioned in Wiki).
        </para>
    </section>

    <section>
        <title>Time Tracking</title>

        <para></para>
    </section>

    <section>
        <title>Graphs</title>

        <para></para>
    </section>

    <section>
        <title>Summary Page</title>

        <para></para>
    </section>
</chapter>